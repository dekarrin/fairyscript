[Scene: (TRANSITION TO) scene_name] -> scene bg scene_name (with TRANSITION)
[Enter: char ( action(, ...tagN)) (TRANSITION IN) (FROM side (FOR (time) SECONDS)) TO position] -> show char (action( ...tagN) | neutral) at (position | side-to-position (time) (with TRANSITION)
[Char: action(, ...tagN)] -> show char action (...tagN)
[Exit: char] -> hide char
(Section: name( WITH PARAMS p1(=def1)(, ...pN(=defN))) -> label name(\(p1(=def1)(, ...pN(=defN))\)):
Char: "text" -> "char" "text" | (char var) "text"
: "text" -> "text"
[Music: "file"(, fadeout old in Seconds] -> play music "file" (fadeout seconds)
[Music: Stop, fadeout in seconds)] -> stop music
[SFX: "file"] -> play sound "file"
[FMV: "file"] -> $ renpy.movie_cutscene("file")
[Flag: flag (OFF | ON)] -> $ flag = True
[Var: var <expr | INC (BY amt) | DEC (BY amt)] -> $ var = val
[Dialog(: hide | show)] -> window (hide | show | auto)
(Go to: label) -> jump label
(Execute: label( with params (name1 )p1(, ...(nameN=)pN))) -> call label(\((name1=)p1(, ...(nameN=)pN)\))
(End(: with retval)) -> return( retval)
[Camera: SNAP TO <loc | CENTER> | (QUICKLY (time)) (PAN TO loc | ZOOM <IN | OUT | NORMAL | WIDE | CLOSE))(... AND other_stuff))]

(also else, else if, while)
[If: expr]
stmt

->

if expr:
    stmt


[If: expr] {
stmt1
stmt2
...
stmtN
}

->

if expr:
    stmt1
    stmt2
    ...
    stmtN



[Choice(: menulabel)]
("title-text")
* "text1": (show if expr1, )( set <var1 <expr | INC (BY amt) | DEC (BY amt)>|flag1 (ON | OFF)> and) go to label1
* "text2": (show if expr2, )( set <var2 val2|flag2 (ON | OFF)>) go to label2
...
* "textN": (show if exprN, )( set varN=valN|flagN and) go to labelN

->

menu( menulabel):
    ("title-text"
)
    "text1"( if expr1):
        ($ var1 = val1 | flag1 = True)
        jump label1

    "text2"( if expr2):
        ($ var2 = val2 | flag2 = True)
        jump label2

...

    "textN"( if exprN):
        ($ varN = valN | flagN = True)
        jump labelN


[Python]
{
    py_stmt1
    py_stmt2
    ...
    py_stmtN
}

->

python:
    py_stmt1
    py_stmt2
    ...
    py_stmtN
